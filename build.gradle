plugins {
    id 'fabric-loom' version '1.2-SNAPSHOT'
    id 'maven-publish'
    id "me.shedaniel.unified-publishing" version "0.1.+"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.archive_minecraft_version + "-fabric-" + project.mod_version
group = project.maven_group

repositories {
    maven { url "https://maven.parchmentmc.org" }
    maven { url "https://maven.shedaniel.me/" }
    maven { url "https://maven.terraformersmc.com/releases/" }
    maven { url "https://maven.blamejared.com/" }
    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    flatDir { dir 'libs' }
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
}

// Include resources generated by data generators.
sourceSets {
    main.resources.srcDirs += "src/generated/resources"
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings loom.officialMojangMappings()
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // PSA: Some older mods, compiled on Loom 0.2.1, might have outdated Maven POMs.
    // You may need to force-disable transitiveness on them.

    //modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
    //    exclude(group: "net.fabricmc.fabric-api")
    //}
    modImplementation "com.terraformersmc:modmenu:${project.modmenu_version}"

    //modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    //modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    modCompileOnlyApi "mezz.jei:jei-1.20.1-common-api:${jei_version}"
    modCompileOnlyApi "mezz.jei:jei-1.20.1-fabric-api:${jei_version}"
    modRuntimeOnly "mezz.jei:jei-1.20.1-fabric:${jei_version}"

    modApi("teamreborn:energy:${project.tr_energy_version}") {
        exclude(group: "net.fabricmc.fabric-api")
    }

    modImplementation "curse.maven:toms-storage-fabric-396826:4649854"
    modImplementation "curse.maven:cloth-config-348521:4633442"
}

loom {
    mixin {
        defaultRefmapName = "${project.mod_id}.refmap.json"
    }

    accessWidenerPath = file("src/main/resources/${project.mod_id}.accesswidener")
}

processResources {
    inputs.property "version", project.mod_version

    filesMatching("fabric.mod.json") {
        expand "version": project.mod_version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

task apiJar(type: Jar) {
    archiveClassifier = 'api'
    include 'snownee/jade/api/**/*'
    from sourceSets.main.allSource
    from sourceSets.main.output
}

artifacts {
    archives apiJar
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    // withSourcesJar()
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    exclude '/snownee/jade/test'
    exclude '**/*.bat'
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            //artifact(sourcesJar) {
            //  builtBy remapSourcesJar
            //}
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

// unifiedPublishing {
//     project {
//         displayName = project.version
//         version = project.mod_version // Optional, Inferred from project by default
//         changelog = file("CHANGELOG.md").exists() ? file("CHANGELOG.md").text : "" // Optional, in markdown format
//         releaseType = project.release_type // Optional, use "release", "beta" or "alpha"
//         gameVersions = ["1.20", "1.20.1"]
//         gameLoaders = ["fabric", "quilt"]

//         mainPublication tasks.remapJar // Declares the publicated jar
//         secondaryPublications.builtBy(tasks.apiJar)

//         curseforge {
//             token = System.getenv("CURSE_TOKEN")
//             id = "324717" // Required, must be a string, ID of CurseForge project

//             relations { // Optional, Inferred from the relations above by default
//                 //depends "fabric-api"
//                 optional "jei"
//             }
//         }

//         modrinth {
//             token = System.getenv("MODRINTH_TOKEN")
//             id = "nvQzSEkH" // Required, must be a string, ID of Modrinth project
//             displayName = project.mod_version

//             relations { // Optional, Inferred from the relations above by default
//                 //depends "fabric-api"
//                 optional "jei"
//             }
//         }
//     }
// }
